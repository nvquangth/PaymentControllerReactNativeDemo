// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "31.0.0"
        minSdkVersion = 21
        compileSdkVersion = 31
        targetSdkVersion = 31

        if (System.properties['os.arch'] == "aarch64") {
            // For M1 Users we need to use the NDK 24 which added support for aarch64
            ndkVersion = "24.0.8215888"
        } else {
            // Otherwise we default to the side-by-side NDK version from AGP.
            ndkVersion = "21.4.7075529"
        }
    }
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:7.2.1")
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath("de.undercouch:gradle-download-task:5.0.1")
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }
        mavenCentral {
            // We don't want to fetch react-native from Maven Central as there are
            // older versions over there.
            content {
                excludeGroup "com.facebook.react"
            }
        }
        google()
        maven { url 'https://www.jitpack.io' }
        maven {
            setUrl("https://asia-southeast1-maven.pkg.dev/teko-development/teko-mobile-sdks")

            authentication {
                basic(BasicAuthentication)
            }

            credentials {
                username = "_json_key_base64"
                password = "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAidGVrby1kZXZlbG9wbWVudCIsCiAgInByaXZhdGVfa2V5X2lkIjogIjZjYzJhZjlkNjhmYmEwMGYwYmViYjBhNjdkNDFhZjc2ODRhMjQzZGEiLAogICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3Z0ZWpKNHUzM1BFRk1cbmdqeWsrSVhuZ1hqMTJHZEYxQ1g0Smx1MHBmYktoUlUzS3BXZHlRd2ZmUWtkSER1WXpPbExjM3RBQm14N2p6ZGlcbnEzQmtJaFluazczYzl0K2MyM3VwSHI2ODNhaTdVNzlrNVJCNjFmSDU2bUtOWEpuVG9hNUVwU2tHS0FCRnljL3RcbnBXNGJWb2NWYnlwYjRSbGZJK01TVXNRWVFmcTk5TGF6YitESTVVb1NKcnFVaG9FMHorVG4xZ3hzdUh6aFRTT0pcbmRBS0VKZk5kQmlxQml4SFdKZGFOQ29YQVRJajFwSzFLTWUzeDFYWXJ2dXk5UzZjYUpQOWFSd2hSOWxXNUczeG5cbjZvUVEyalpROFo0dXBueDNtajNNQXpLZGZxdFNlZXhVUEkraW5kUzZMcWJVOGVVMjNVclZuWnZaY0ZvSW01SGJcbmdIRnorNFB4QWdNQkFBRUNnZ0VBQXQwVEJYWEY0U3h0cDhHY1c0ZXJsbjZZSGlFVUMwbTZJZTk5bVgzR0xpNGhcbnJySEthUTB6amZDUnFVUmFWZ3JhWHpyN1FtdU1ZVzNmeGlOVFFFV0VNUXBOeXdQb3VHZWxEZmc0M1c3N0dzenlcblNzS1hMSHBQd0kzODQ4OERXSVVyTi9ZTlcycmoyTDlSakw3Z1F0Q3I0RW44MGEwakpzZFk0alhBT1lFN1JQVFlcbjR3Sy9PekZTZHdlS05FQTlwS1E4dVdsK3k3S05pbWNVNU5pMExtWmxvZnRGQStrWWZTWEp2RFBnVkVrNVFrbW9cbi9yYTBMeGJuWlQzWExLbjZMTktvOXEwWkhtVEViNzVSNU9TRmVCVnpiK3JnWW5IOXN4b1M4Yi9xSFl4Nm84WEJcbjB0dWlBVDdJNTNySzdzQTZNZHVyUkVyTTJaL25BTmVtdlplVENBNWVJUUtCZ1FEcEgzcTFWY3RnTGE2QWp0ZjlcbmFNK3JUZDFnSmxtT0tPVHVSMi9iVlR1aVdhWU1PVU80dFZRTExMa1hKeGpncXVRVDlzTEJPUk1uRXpEQUIyYmdcbmwxanorVmZQaFplenFtTW1zRmNhczFuNk02VVROY2Jud08zcGV2QmFrTXZvNkNES0dKcnAzQ1VpVE5tdFlOd0hcbnRkSis2Z1U3Wkp6aDU1d2Z5d1NKTzdvbVVRS0JnUURBOUIxaENMS1oyNW1mTkhxTEUxbnFNeFFOWUdYcWpTeWVcbnJWdDNsbytXVzBueXRNVWx6cFh1VUJGTzY4TFVTV1MvQy8xei9QR1hPTHlTOXpPbjVOcHlaS1pZc1kxV2N1aE1cbmp0MUllUmxZTEorb0Y0SVZYM2R6MVRDSmwxRzNXRE9oTll0NndEY1R0TkR0bzNIdXpRcFk0VkZPUGtSUTNkVm5cbjJXNHpUTmo3b1FLQmdRQy90Umx0NGQzYmUvV1MxdVVjQ1lNdHRseWtZeVVtV003YWZIaXFBQStJVlB6TjlKR1NcblpkdDFUUlB3ekVBVEViVjZEV1RmRFJhSS9ha0xZWXJpaXRPbDNwaXRtWWpGUVF0RWw2TXAyKy9VWjRBS3FpQ21cbkdPd05Jd0poRjgzMy9GeHFsWTFmWDZCUjhxelhmVjIwSVh1MnpxLzZ4YVNWeWFlRUphblhTUHl0NFFLQmdDY1BcbmcvOEh0cmdrMTNWK055eCtUMTUwMXFOYWwyY2pDeHhZTmNNQXpMS0FhbmppbFdKdzdyTWVyRkpRc2RFdHhtSlNcbmVBMko4QkpQM3dUVlhEU3B4SHNSMndicmNwUkVrTGdtMTY3N0xPRkhyMDVrNitXTnZPM0xBNWRtOVpqckZ4Q1VcbmVWYnhJSFV4em5XODk2eUMvNHc4bUt3Qk9PMHg2eWlwd0lCTUYwVGhBb0dCQU1aMG1yNi9wV1ExdEM0UE05cnBcbldsdmhjemphYmM4R0p1WHloUE4xRmQvVjFqaVdJVzcySHMvb29tWS9wanVZbjRGRTB0aGxWcEVGTzE1RDY5bEtcbml1L3BCeXZ4dzZvelA4MUdGVjRNc2hJZUd5b2ErWTl4QTRNd2o3b21nczNRdTg2YVlNZVRXVjV6UjhrakhObXFcbnNEZkp2bms5THhDUXpUSmNkaUVRY1lGV1xuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogImFydGlmYWN0LXJlZ2lzdHJ5LWFkbWluQHRla28tZGV2ZWxvcG1lbnQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLAogICJjbGllbnRfaWQiOiAiMTE3NTc0MTAyNzQ3MjEwNTEwMjQ3IiwKICAiYXV0aF91cmkiOiAiaHR0cHM6Ly9hY2NvdW50cy5nb29nbGUuY29tL28vb2F1dGgyL2F1dGgiLAogICJ0b2tlbl91cmkiOiAiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW4iLAogICJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwKICAiY2xpZW50X3g1MDlfY2VydF91cmwiOiAiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vcm9ib3QvdjEvbWV0YWRhdGEveDUwOS9hcnRpZmFjdC1yZWdpc3RyeS1hZG1pbiU0MHRla28tZGV2ZWxvcG1lbnQuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iCn0="
            }
        }
    }
}
